---
name: rules_pact
on:
  push:
    branches:
      - main
jobs:
  test_job:
    runs-on: ubuntu-22.04
    container:
      image: gcr.io/bazel-public/bazel:7.0.0
      volumes:
        - /usr/bin/docker:/usr/bin/docker
        - /var/run/docker.sock:/var/run/docker.sock
      options: -e USER="root" -u="root"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fetch bazel cache
        uses: actions/cache@v3
        with:
          path: /tmp/cache
          key: bazel-cache
          restore-keys: |
            bazel-cache
      - name: Bazel test
        run: bazel --output_user_root=/tmp/cache test --test_output=errors //...
  release_job:
    runs-on: ubuntu-22.04
    needs: test_job
    env:
      RELEASE_NAME: rules_pact
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic
        with:
          extra_plugins: |
            @semantic-release/exec@6.0.3
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Do something when a new release published
        if: steps.semantic.outputs.new_release_published == 'true'
        env:
          NEXT_RELEASE_VERSION: ${{ steps.semantic.outputs.new_release_version }}
        run: |
          echo $GITHUB_WORKFLOW $NEXT_RELEASE_VERSION
      - name: Fetch source of archive
        if: steps.semantic.outputs.new_release_published == 'true'
        env:
          NEXT_RELEASE_VERSION: ${{ steps.semantic.outputs.new_release_version }}
        run: |
          echo $RELEASE_NAME $NEXT_RELEASE_VERSION
          curl \
            -L \
            -o $RELEASE_NAME-v$NEXT_RELEASE_VERSION.tar.gz \
            https://github.com/opicaud/$RELEASE_NAME/archive/refs/tags/v$NEXT_RELEASE_VERSION.tar.gz
          ls
      - name: Create release
        if: steps.semantic.outputs.new_release_published == 'true'
        env:
          NEXT_RELEASE_VERSION: ${{ steps.semantic.outputs.new_release_version }}
        uses: ncipollo/release-action@v1.14.0
        with:
          prerelease: true
          name: ${{ env.RELEASE_NAME }}-v${{ env.NEXT_RELEASE_VERSION }}
          tag: v${{ env.NEXT_RELEASE_VERSION }}
          allowUpdates: true
          draft: true
          artifactErrorsFailBuild: true
          updateOnlyUnreleased: true
          generateReleaseNotes: false
          artifacts: >-
            ${{ env.RELEASE_NAME }}-v${{ env.NEXT_RELEASE_VERSION }}.tar.gz